<!-- DO NOT EDIT README.md (It will be overridden by README.hbs) -->

# internal-data

# Description

Private properties implementation using WeakMap as described on [MDN - Private Properties](https://developer.mozilla.org/en-US/Add-ons/SDK/Guides/Contributor_s_Guide/Private_Properties).

# Synopsis

## Flow

```js
// @flow

//                                     Don't forget parentheses () â†´
const getInternal: (MyClass) => Internal = require('internal-data')(); // eslint-disable-line no-use-before-define

type Internal = {
  password: string
};

class MyClass {
  name: string;

  constructor(name, password) {
    const internal = getInternal(this);
    this.name = name;
    internal.password = password;
  }

  checkPassword(password) {
    const internal = getInternal(this);
    return internal.password === password;
  }

  methodWithFlowError() {
    const internal = getInternal(this);
    return internal.salary;  // -> FLOW ERROR
  }
}

const object = new MyClass('George', '1234');

const name     = object.name;                  // -> George
const password = object.password;              // -> FLOW ERROR
const isValid  = object.checkPassword('1234'); // -> true
```

## Vanilla JS

```js
//              Don't forget parentheses () â†´
const getInternal = require('internal-data')();

class MyClass {
  constructor(name, password) {
    const internal = getInternal(this);
    this.name = name;
    internal.password = password;
  }

  checkPassword(password) {
    const internal = getInternal(this);
    return internal.password === password;
  }
}

const object = new MyClass('George', '1234');

const name     = object.name;                  // -> George
const password = object.password;              // -> undefined
const isValid  = object.checkPassword('1234'); // -> true
```

# Details

To access private properties of the object use `getInternal(this)` method. It returns an object to store private attributes
of given object (In this case it is It is `this`)

# API
{{>main~}}
